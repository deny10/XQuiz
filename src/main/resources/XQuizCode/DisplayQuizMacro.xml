<?xml version="1.0" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<xwikidoc version="1.1">
  <web>XQuizCode</web>
  <name>DisplayQuizMacro</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <creator>xwiki:XWiki.Admin</creator>
  <creationDate>1460890785000</creationDate>
  <parent>XQuiz.WebHome</parent>
  <author>xwiki:XWiki.Admin</author>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <date>1461085276000</date>
  <contentUpdateDate>1460969106000</contentUpdateDate>
  <version>1.1</version>
  <title/>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>true</hidden>
  <content>{{velocity}}
{{DisplayQuiz quiz="$!request.quiz"}}
{{/velocity}}</content>
  <attachment>
    <filename>img_sprite.png</filename>
    <author>xwiki:XWiki.Admin</author>
    <date>1460969106000</date>
    <version>1.1</version>
    <comment/>
    <content></content>
    <filesize>30567</filesize>
  </attachment>
  <object>
    <name>XQuizCode.DisplayQuizMacro</name>
    <number>0</number>
    <className>XWiki.JavaScriptExtension</className>
    <guid>13d31b7f-ee78-4022-aa72-c56ca30da040</guid>
    <class>
      <name>XWiki.JavaScriptExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <disabled>0</disabled>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage|onDemand|always</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>require(['jquery'], function ($) {
  var progress = jQuery('#progress'),
    progressKeeper = jQuery('#progressKeeper'),
    notice = jQuery("#notice"),
    progressWidth = 548,
    answers= kroggy.answers,
    userAnswers = [],
    questionLength= answers.length,
    questionsStatus = jQuery("#questionNumber")
    questionsList = jQuery(".question");
// ## Using a simple local variable for formating localization
// #set($local = $services.localization)
//--------------------------------
// Listen to start btn action
//--------------------------------
jQuery('.btnStart').click(function(){
    // Hide the intro div and show the first question
    jQuery(this).parents('.questionContainer').fadeOut(500, function(){
        jQuery(this).next().fadeIn(500, function(){ progressKeeper.show(); });
    });
    return false;
});
//--------------------------------
// Listen to next btn action
//--------------------------------
jQuery('.btnNext').click(function(){
    // Check if the checkbox is checked
    var tempCheck = jQuery(this).parents('.questionContainer').find('input[type=radio]:checked');
    if (tempCheck.length == 0) {
        // display notice to select
         notice.fadeIn(300);return false;
    }
    notice.hide();
    // Hide the current Div and display the next
    jQuery(this).parents('.questionContainer').fadeOut(500, function(){
        jQuery(this).next().fadeIn(500);
    }); 
    // Display the progress bar
    progress.animate({ width: progress.width() + Math.round(progressWidth/questionLength), }, 500 );
         return false;
});
//--------------------------------
// Gathering the User's Answers
//--------------------------------
jQuery('.btnShowResult').click(function(){
  var tempCheck = jQuery(this).parents('.questionContainer').find('input[type=radio]:checked');
  if (tempCheck.length == 0) {
       notice.fadeIn(300);return false;
  }
  // Get All the input checked by user
  var tempArr = jQuery('input[type=radio]:checked');
  for (var i = 0, ii = tempArr.length; i &lt; ii; i++) {
      userAnswers.push(tempArr[i].getAttribute('data-key'));
  }
  progressKeeper.hide();
  // init some vars used to display the result
  var results = checkAnswers(),
                resultSet = '',
                trueCount = 0,
                score;
  // Evaluate the result
  for (var i = 0; i &lt; results.length; i++){
      if (results[i] == true) trueCount++;
      resultSet += '&lt;div class="resultRow"&gt; Question #' + (i + 1) + (results[i]== true ? "&lt;div class='correct'&gt;$local.render('xquiz.displayquizmacro.correct')&lt;/div&gt;": "&lt;div class='wrong'&gt;$local.render('xquiz.displayquizmacro.wrong')&lt;/div&gt;") + "&lt;/div&gt;";
  }
  score =  roundReloaded(trueCount / questionLength*100, 2);
  // Add btn to save the result on wiki page
  var saveResultBtn = "&lt;div id='answer-key'&gt;&lt;input type='button' class='saveResult' name='saveResult' value='$local.render('xquiz.displayquizmacro.saveyourresult')' /&gt;&lt;/div&gt;";
  resultSet = '&lt;h2 class="qTitle"&gt;' +judgeSkills(score) + ' $local.render('xquiz.displayquizmacro.youscored') ' + score + '%&lt;/h2&gt;' + resultSet + saveResultBtn;
  jQuery('#resultKeeper').html(resultSet).show();

  // Show the result bloc
  jQuery(this).parents('.questionContainer').fadeOut(500, function(){
      jQuery(this).next().fadeIn(500);
  });
  //Listen to submit result btn
  jQuery('input.saveResult').click(function() {
    submitUserResult(userAnswers,score);
   });

  return false;
});

//---------------------------------
// Init the UI
//---------------------------------
progressKeeper.hide();
notice.hide();
jQuery('#myResultLink').hide();
jQuery("#XQuiz-holder input:radio").attr("checked", false);

jQuery('.answers li input').click(function() {
  jQuery(this).parents('.answers').children('li').removeClass("selected");
  jQuery(this).parents('li').addClass('selected');
});

//---------------------------------
// Create the user result docs
//---------------------------------
function submitUserResult(userAnswers,score){
  // Notification
  var notif = new XWiki.widgets.Notification("$local.render('xquiz.displayquizmacro.saveresult') ...", "inprogress", {inactive: true} );
  // Ajax request to save the result
  new Ajax.Request('$xwiki.getURL('XQuizCode.QuizServices','get', 'xpage=plain&amp;outputSyntax=plain')', {
                   parameters: {'action' : 'createQuizResponse', 'note': score, 'quiz': jQuery("#quiz")[0].value, 'userAnswers' : userAnswers},
    method: 'get',
      onLoading: function(){
        notif.show();
      },
        onSuccess: function(transport){
          // Notification
          notif.replace(new XWiki.widgets.Notification("$local.render('xquiz.displayquizmacro.saveresult')", "done"));
          // Replace element Class by done
          jQuery('#myResultLink').attr('href',transport.responseText);
          jQuery('#myResultLink').show();
          // Hide save result btn
          jQuery(".saveResult").hide();
        },
          onFailure: function(){
            notif.replace(new XWiki.widgets.Notification("Erreur'", "error"));
          }
});
}
// ------------------------------
// Creating the Helper Functions
// ------------------------------
function roundReloaded(num, dec) {
    var result = Math.round(num*Math.pow(10,dec))/Math.pow(10,dec);
    return result;
}
function judgeSkills(score) {
    var returnString;
        if (score==100) returnString = "$local.render('xquiz.displayquizmacro.reseq100')"
        else if (score&gt;90) returnString = "$local.render('xquiz.displayquizmacro.resinf100')"
        else if (score&gt;70) returnString = "$local.render('xquiz.displayquizmacro.resinf90')"
        else if (score&gt;50) returnString = "$local.render('xquiz.displayquizmacro.resinf70')"
        else if (score&gt;35) returnString = "$local.render('xquiz.displayquizmacro.resinf50')"
        else if (score&gt;20) returnString = "$local.render('xquiz.displayquizmacro.resinf35')"
        else returnString = "$local.render('xquiz.displayquizmacro.resinf20')"
    return returnString;
}

function checkAnswers() {
    var resultArr = [],
                flag = false;
    for (i=0; i&lt;answers.length; i++) {
        if (answers[i] == userAnswers[i]) {
            flag = true;
        }
        else {
            flag = false;
        }
        resultArr.push(flag);
    }
    return resultArr;
}
})</code>
    </property>
    <property>
      <name/>
    </property>
    <property>
      <parse>1</parse>
    </property>
    <property>
      <use>currentPage</use>
    </property>
  </object>
  <object>
    <name>XQuizCode.DisplayQuizMacro</name>
    <number>0</number>
    <className>XWiki.StyleSheetExtension</className>
    <guid>adf5f133-7e51-4f79-bd8f-6705360bebc8</guid>
    <class>
      <name>XWiki.StyleSheetExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <disabled>0</disabled>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <contentType>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>contentType</name>
        <number>6</number>
        <prettyName>Content Type</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>CSS|LESS</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </contentType>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage|onDemand|always</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>default</cache>
    </property>
    <property>
      <code>#main-quiz-holder .plans h3 {
    color: #d6dae0;
    text-transform: uppercase;
    font-weight: 600;
    font-size: 1.3em;
    margin-bottom: 1em;
    text-align: center;
}
#main-quiz-holder { 
    margin: 0 auto; 
    position: relative;background: #FCFCFC; 
     position: relative; 
     width: 600px; 
     font-family:  "Myriad", "Myriad Pro", "Helvetica","Segoe UI", "Lucida Sans Unicode", "Lucida Grande", sans-serif; 
      border-top: 10px solid #c1c901;
    box-shadow: 0 3px 0px 0px #e3e4e8;
    -webkit-box-shadow: 0 3px 0px 0px #e3e4e8;
    -moz-box-shadow: 0 3px 0px 0px #e3e4e8;
    -o-box-shadow: 0 3px 0px 0px #e3e4e8;
} 
#main-quiz-holder a { 
    text-decoration: none;
    color: #5B5C58;
    font-weight: bold;
} 
#results-container, #intro-container { 
    width: 500px; 
    text-align: center; 
} 
.questionContainer { 
    width: 560px; 
     min-height: 400px; 
    padding: 20px; 
     overflow: auto; 
     margin: auto; 
} 
.questionContainer .question, h2.qTitle { 
    font-size: 1.5em;
    font-weight: 500;
    color: #c1c901;
    text-transform: capitalize;
} 
h2.qTitle { 
    font-size: 32px; 
    margin-top: 30px; 
} 
.questionContainer ul.answers { 
    margin: 0px; 
    padding: 5px; 
     list-style: none; 
} 
.questionContainer ul.answers li { 
    padding: 5px 50px;
    margin: 12px 0;
    color: #4c4c4c;
    border-radius: 4px;
    text-shadow: 0 1px 0 rgba(255,255,255,0.3);
    background: #f6f6f6;
} 
.questionContainer ul.answers li.selected { 
    -webkit-box-shadow: inset 0px 1px 0px #B0B801, 0px 0px 0px 0px #1B455A, 0px 2px 1px #FFF;
    background-color: rgba(193, 201, 1, 0.47);
} 

#progressKeeper { 
    margin: 20px 0;
    background: #f0f2f5;
    height: 20px;
    border-radius: 5px;
    -webkit-border-radius: 5px;
    -moz-border-radius: 5px;
    -o-border-radius: 5px;
} 
 #progress { 
    width: 0; 
    background: #B0B702;
    height: 20px;
    border-radius: 5px 0px 0px 5px;
    -webkit-border-radius: 5px 0px 0px 5px;
    -moz-border-radius: 5px 0px 0px 5px;
    -o-border-radius: 5px 0px 0px 5px;
 } 
#resultKeeper { 
    margin: 10px; 
     text-align: center; 
     overflow: auto; 
} 
#notice { 
    position: absolute; 
    bottom: 40px; 
    right: 20px; 
} 
.questionContainer .prev { float: left;} 
.questionContainer .next, .questionContainer.btnShowResult { float: right; } 
.questionContainer .clear { clear: both; } 
.hidequest { display: none; } 
.btnPrev { 
    padding-left: 24px; 
    background: url(img/back.png) left no-repeat; 
} 
.btnNext { 
    font-size: 1em;
    background: #c1c901;
    color: #fff;
    padding: 10px 15px;
    display: inline-block;
    text-align: center;
    font-weight: 500;
    border: 0;
    outline: 0;
    cursor: pointer;
    font-family: 'Roboto',sans-serif;
} 
.btnShowResult{ 
    font-size: 1em;
    background: #c1c901;
    color: #fff;
    padding: 10px 15px;
    display: inline-block;
    text-align: center;
    font-weight: 500;
    border: 0;
    outline: 0;
    cursor: pointer;
    font-family: 'Roboto',sans-serif;
}
.btnStart {
    text-align: center;
    -webkit-border-radius: 4px;
    -moz-border-radius: 4px;
    -o-border-radius: 4px;
    border-radius: 4px;
    font-size: 17px;
    font-weight: 500;
    color: #fff;
    outline: none;
    padding: 10px 30px;
    border: none;
    background: #B0B801;
    font-family: 'Roboto', sans-serif;
    text-transform: uppercase;
}
.btnStart:hover{
	background:#9E7E65;
}
.btnContainer { 
    margin: 20px 0 30px 0; 
    padding: 5px; 
} 
.resultRow {
    width: 110px;
    margin: 10px 25px;
    float: left;
    color: #999999;
} 
.correct {
    text-align: center;
    font-weight: 500;
    font-family: 'Roboto', sans-serif;
    border: 2px solid #a0d468;
    background: #a0d468;
    color: #fff;
    border-radius: 4px;
    padding: 5px 15px;
} 
.wrong { 
    text-align: center;
    font-weight: 500;
    font-family: 'Roboto', sans-serif;
    border: 2px solid #ed5565;
    background: #D13471;
    color: #fff;
    border-radius: 4px;
    padding: 5px 15px; 
} 
#answer-key { 
    text-align: center; 
    width: 300px; 
    padding: 15px; 
    margin: 0 auto; 
     clear: both; 
     font-size: 16px; 
}
.answers label {
    color: #626161;
    font-size: 0.95em;
    font-weight: 300;
    line-height: 2em;
}
.questionContainer ul.answers li:hover {
    background-color: rgba(193, 201, 1, 0.47);
}
.saveResult {
    text-align: center;
    -webkit-border-radius: 4px;
    -moz-border-radius: 4px;
    -o-border-radius: 4px;
    border-radius: 4px;
    font-size: 17px;
    font-weight: 500;
    color: #fff;
    outline: none;
    padding: 10px 30px;
    border: none;
    background: #B0B801;
    font-family: 'Roboto', sans-serif;
    text-transform: uppercase;
}
.saveResult:hover{
	background:#9E7E65;
}
#myResultLink {
    text-align: center;
    font-size: 15px;
    font-weight: 500 !important;
    outline: 0;
    padding: 10px 25px;
    border: 0;
    background: #b0b801;
    font-family: 'Roboto',sans-serif;
    text-transform: uppercase;
    color: #fff !important;
    line-height: 30px;
    float: right;
}
#myResultLink:hover{
	background:#9E7E65;
}</code>
    </property>
    <property>
      <contentType>CSS</contentType>
    </property>
    <property>
      <name/>
    </property>
    <property>
      <parse>1</parse>
    </property>
    <property>
      <use>currentPage</use>
    </property>
  </object>
  <object>
    <name>XQuizCode.DisplayQuizMacro</name>
    <number>0</number>
    <className>XWiki.WikiMacroClass</className>
    <guid>e603b554-1e28-4918-a6b0-4a6042cb10c4</guid>
    <class>
      <name>XWiki.WikiMacroClass</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <code>
        <disabled>0</disabled>
        <name>code</name>
        <number>9</number>
        <prettyName>Macro code</prettyName>
        <rows>20</rows>
        <size>40</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <contentDescription>
        <disabled>0</disabled>
        <name>contentDescription</name>
        <number>8</number>
        <prettyName>Content description (Not applicable for "No content" type)</prettyName>
        <rows>5</rows>
        <size>40</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </contentDescription>
      <contentType>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>contentType</name>
        <number>7</number>
        <prettyName>Macro content type</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator>|</separator>
        <separators>|</separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>Optional|Mandatory|No content</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </contentType>
      <defaultCategory>
        <disabled>0</disabled>
        <name>defaultCategory</name>
        <number>4</number>
        <prettyName>Default category</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </defaultCategory>
      <description>
        <disabled>0</disabled>
        <name>description</name>
        <number>3</number>
        <prettyName>Macro description</prettyName>
        <rows>5</rows>
        <size>40</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </description>
      <id>
        <disabled>0</disabled>
        <name>id</name>
        <number>1</number>
        <prettyName>Macro id</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </id>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>2</number>
        <prettyName>Macro name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <supportsInlineMode>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>supportsInlineMode</name>
        <number>5</number>
        <prettyName>Supports inline mode</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </supportsInlineMode>
      <visibility>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>visibility</name>
        <number>6</number>
        <prettyName>Macro visibility</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator>|</separator>
        <separators>|</separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>Current User|Current Wiki|Global</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </visibility>
    </class>
    <property>
      <code>{{velocity}}
##########################################################
##                DISPLAY QUIZ MACRO
##          --------------------------------
##
##           Authors: Zoubir Medjdoub
##
##########################################################
## Using a simple local variable for formating localization
#set($local = $services.localization)
#set($discard = $xwiki.jsx.use('XQuizCode.DisplayQuizMacro'))
#set($discard = $xwiki.ssx.use('XQuizCode.DisplayQuizMacro'))
#set($quiz = $xcontext.macro.params.quiz)
#set($quizDoc = $xwiki.getDocument($quiz))
## ---------------------------------------------------------------------------------------------------------
## List the questions of quiz
## ---------------------------------------------------------------------------------------------------------
#set($questions = $quizDoc.getObjects('XQuizCode.QuestionClass'))
{{html wiki="false" clean="false"}}
#if($questions.size()&gt;0)
&lt;div id="main-quiz-holder"&gt;
  &lt;div class="plans"&gt;
    &lt;h3&gt;$quizDoc.display('quizTitle')&lt;/h3&gt;
  &lt;/div&gt;
    &lt;div id="intro-container" class="questionContainer"&gt;
        &lt;input class="btnStart" type="button" value="$local.render('xquiz.displayquizmacro.startbtn')"&gt;
    &lt;/div&gt;
    ## Init the correct Answers var
    #set($correctAnswers = "" )
	#foreach($quest in $questions)
    ## ------------------
    ## Question container
    ## ------------------
    &lt;div class="questionContainer hidequest"&gt;
        &lt;div class="question"&gt; 
            ${velocityCount}. $quest.get('questionTitle')
        &lt;/div&gt; 
        &lt;ul class="answers"&gt;
        	#foreach($i in [1..5])
              #displayAnswerLine($quest "answer${i}")
            #end
        &lt;/ul&gt; 
        &lt;input type="hidden" name="correctAnswer" value="$!quest.get('correctAnswer')"&gt;
        &lt;div class="btnContainer"&gt;
            &lt;div class="next"&gt;
              #if($foreach.hasNext)
                &lt;input class="btnNext" type="button" value="$local.render('xquiz.displayquizmacro.nextbtn')"&gt;
                #set($correctAnswers = "${correctAnswers}'$!quest.get('correctAnswer')',")
              #else
                &lt;input class="btnShowResult" type="button" value="$local.render('xquiz.displayquizmacro.finishbtn')"&gt;
                #set($correctAnswers = "${correctAnswers}'$!quest.get('correctAnswer')'")
              #end
            &lt;/div&gt;
            &lt;div class="clear"&gt;
            &lt;/div&gt;
        &lt;/div&gt;
    &lt;/div&gt;
    ## ------------------
    #end  
    &lt;div id="results-container" class="questionContainer hidequest"&gt;
        &lt;div id="resultKeeper"&gt; 
        &lt;/div&gt; 
    &lt;/div&gt; 
    &lt;div id="progressKeeper"&gt; 
        &lt;div id="progress"&gt; 
        &lt;/div&gt; 
    &lt;/div&gt; 
    &lt;div id="notice"&gt; 
        $local.render('xquiz.displayquizmacro.selectoption')
    &lt;/div&gt;
    &lt;a id="myResultLink" href="#"&gt;$local.render('xquiz.displayquizmacro.yourresultbtn')&lt;/a&gt;
&lt;/div&gt;
## Init the current Quiz 
&lt;input type="hidden" name="quiz" id="quiz" value="$quiz"&gt;
&lt;script &gt;
var kroggy = { answers: [ $correctAnswers] };
&lt;/script&gt;
#else
  #info($local.render('xquiz.displayquizmacro.noquiz'))
#end
## Macro to display an answer line
#macro(displayAnswerLine $quest $answerId)
  #if("$!quest.get($answerId)" != "")
    #set($answer = $escapetool.html($!quest.getProperty($answerId).getValue()))##
    &lt;li&gt;&lt;label&gt;&lt;input data-key="$answerId" type="radio"&gt;$answer&lt;/label&gt;&lt;/li&gt;
  #end
#end
{{/html}}
{{/velocity}}</code>
    </property>
    <property>
      <contentDescription/>
    </property>
    <property>
      <contentType>Optional</contentType>
    </property>
    <property>
      <defaultCategory>content</defaultCategory>
    </property>
    <property>
      <description>This macro is used to display a quiz on a wiki page</description>
    </property>
    <property>
      <id>DisplayQuiz</id>
    </property>
    <property>
      <name>Display Quiz</name>
    </property>
    <property>
      <supportsInlineMode>0</supportsInlineMode>
    </property>
    <property>
      <visibility>Current Wiki</visibility>
    </property>
  </object>
  <object>
    <name>XQuizCode.DisplayQuizMacro</name>
    <number>0</number>
    <className>XWiki.WikiMacroParameterClass</className>
    <guid>3ad60ac9-5573-4541-afb1-ed8b2ae35ef9</guid>
    <class>
      <name>XWiki.WikiMacroParameterClass</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <defaultValue>
        <disabled>0</disabled>
        <name>defaultValue</name>
        <number>4</number>
        <prettyName>Parameter default value</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </defaultValue>
      <description>
        <disabled>0</disabled>
        <name>description</name>
        <number>2</number>
        <prettyName>Parameter description</prettyName>
        <rows>5</rows>
        <size>40</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </description>
      <mandatory>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>mandatory</name>
        <number>3</number>
        <prettyName>Parameter mandatory</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </mandatory>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Parameter name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
    </class>
    <property>
      <defaultValue/>
    </property>
    <property>
      <description>The doc fullName of quiz to display</description>
    </property>
    <property>
      <mandatory>1</mandatory>
    </property>
    <property>
      <name>quiz</name>
    </property>
  </object>
</xwikidoc>
